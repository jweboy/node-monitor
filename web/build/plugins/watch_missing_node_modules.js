/*
 * @Author: jweboy
 * @Date: 2019-11-01 23:37:42
 * @LastEditors: jweboy
 * @LastEditTime: 2019-11-01 23:44:38
 */
'use strict';

class WatchMissingNodeModulesPlugin {
  constructor(nodeModulesPath) {
    this.nodeModulesPath = nodeModulesPath;
  }

  apply(compiler) {
    compiler.hooks.emit.tapAsync(
      'WatchMissingNodeModulesPlugin',
      (compilation, callback) => {
        const nodeModulesPath = this.nodeModulesPath;
        // If any missing files are expected to appear in node_modules...
        if (Array.from(compilation.missingDependencies).some(file => file.indexOf(nodeModulesPath) !== -1)) {
          // ...tell webpack to watch node_modules recursively until they appear.
          compilation.contextDependencies.push(nodeModulesPath);
        }

        if (typeof callback === 'function') {
          callback();
        }
      }
    );
  }
}

module.exports = WatchMissingNodeModulesPlugin;
